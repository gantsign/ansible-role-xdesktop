---
# Require the standard build environment
sudo: required

# Require Ubuntu 14.04
dist: trusty

# Require docker
services:
  - docker

before_install:
  # Create the Docker image
  - sudo docker build --rm --file=tests/Dockerfile --tag=test_img tests

  # Verify test user
  - sudo docker run --rm --user=test_usr test_img sudo ansible --version

script:
  # Assign the name of the current directory as the repo_name
  - 'repo_name=${PWD##*/}'

  # Create the Docker container
  - sudo docker run --detach --volume=$(pwd):/ansible/$repo_name --name=test_dkr test_img /sbin/init

  # Save Docker exec command to an environment variable
  - 'exec_dkr="sudo docker exec --user=test_usr test_dkr"'

  # Basic role syntax check
  - '$exec_dkr bash -c "cd /ansible/$repo_name && ansible-playbook -i tests/inventory --syntax-check tests/test.yml"'

  # Run the playbook with ansible-playbook
  - '$exec_dkr bash -c "cd /ansible/$repo_name && sudo ansible-playbook -i tests/inventory tests/test.yml"'

  # Check the xubuntu apps are installed
  - $exec_dkr which xfce4-about
  - $exec_dkr xfce4-mixer --version
  - $exec_dkr which gedit 
  - $exec_dkr which seahorse
  - $exec_dkr which dockx
  - $exec_dkr ls -l /usr/lib/xfce4/panel/plugins/libdockbarx.so

  # Check config files installed
  - $exec_dkr ls -l /home/test_usr/.config/xfce4/panel
  - $exec_dkr ls -l /home/test_usr/.config/xfce4/panel/dockbarx-9.rc

  # Clean up
  - sudo docker stop test_dkr
  - sudo docker rm test_dkr

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
